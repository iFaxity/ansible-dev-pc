- name: Core OS customization (Gnome UI)
  hosts: 127.0.0.1
  connection: local

  vars:
    distribution_release_snwh_fallback:
      'jammy': 'focal'
    distribution_release_snwh: "{{ distribution_release_snwh_fallback[ansible_distribution_release] | default(ansible_distribution_release) }}"

    fonts:
      # FiraCode Nerd Font
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/complete/Fira%20Code%20Regular%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Bold/complete/Fira%20Code%20Bold%20Nerd%20Font%20Complete%20Mono.ttf
      # JetBrainsMono Nerd Font
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/Regular/complete/JetBrains%20Mono%20Regular%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/Italic/complete/JetBrains%20Mono%20Italic%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/Bold/complete/JetBrains%20Mono%20Bold%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/BoldItalic/complete/JetBrains%20Mono%20Bold%20Italic%20Nerd%20Font%20Complete%20Mono.ttf
      # UbuntuMono Nerd Font
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/UbuntuMono/Regular/complete/Ubuntu%20Mono%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/UbuntuMono/Regular-Italic/complete/Ubuntu%20Mono%20Italic%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/UbuntuMono/Bold/complete/Ubuntu%20Mono%20Bold%20Nerd%20Font%20Complete%20Mono.ttf
      - https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/UbuntuMono/Bold-Italic/complete/Ubuntu%20Mono%20Bold%20Italic%20Nerd%20Font%20Complete%20Mono.ttf

    fonts_apt:
      - fonts-crosextra-carlito
      - fonts-crosextra-caladea

    is_ubuntu_bionic: "{{ ansible_distribution_release == 'bionic' }}"

  tasks:
    - set_fact: is_wsl={{ lookup('file', '/proc/version') is regex('(M|m)icrosoft') }}

    - name: "[WSL] Get Windows folder"
      shell: wslpath "$(cmd.exe /c "echo %WINDIR%" 2>/dev/null)"
      register: windir
      when: is_wsl

    - name: "[WSL] Get user's Windows home folder"
      shell: wslpath "$(cmd.exe /c "echo %USERPROFILE%" 2>/dev/null)"
      register: userprofile
      when: is_wsl

    - name: "[WSL] Link Windows fonts into WSL"
      become: yes
      copy:
        dest: /etc/fonts/local.conf
        content: |
          <?xml version="1.0"?>
          <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
          <fontconfig>
              <dir>{{ windir.stdout }}/Fonts</dir>
              <dir>{{ userprofile.stdout }}/AppData/Local/Microsoft/Windows/Fonts</dir>
          </fontconfig>
      when: is_wsl

    - name: "[Non-WSL] Extract GNOME extension"
      unarchive:
        src: "{{ item.item.url }}"
        dest: "~/.local/share/gnome-shell/extensions/{{ item.item.name }}"
        creates: "~/.local/share/gnome-shell/extensions/{{ item.item.name }}/metadata.json"
        remote_src: yes
      loop: "{{ new_extensions.results }}"
      when: not is_wsl and item.changed

    - name: "[Non-WSL] Enable GNOME extension"
      command: gnome-shell-extension-tool -e "{{ item.item.name }}"
      loop: "{{ new_extensions.results }}"
      when: not is_wsl and item.changed

    - name: "[Non-WSL] Install Fonts (via APT)"
      become: yes
      apt:
        package: "{{ item }}"
      loop: "{{ fonts_apt }}"
      when: not is_wsl

    - name: "[Non-WSL] Install Microsoft TTF fonts"
      become: yes
      apt:
        package: ttf-mscorefonts-installer
      when: not is_wsl

    - name: "[Non-WSL] Install Fonts (downloaded)"
      become: yes
      get_url:
        url: "{{ item }}"
        dest: /usr/local/share/fonts/
      loop: "{{ fonts }}"
      register: fonts_downloaded
      when: not is_wsl

    - name: "[Non-WSL] Update font cache"
      become: yes
      command: fc-cache -sv
      when: not is_wsl and fonts_downloaded.changed

    - name: "[Non-WSL] Add Gnome themes APT package key"
      become: yes
      get_url:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xd320d0c30b02e64c5b2bb2743766223989993a70
        dest: /etc/apt/keyrings/ppa_snwh_ppa_{{ distribution_release_snwh }}.asc
        mode: 0644
      when: not is_wsl

    - name: "[Non-WSL] Install Gnome Tweaks"
      become: yes
      apt:
        package: gnome-tweaks
      when: not is_wsl

    - name: "[Non-WSL] Enable chrome-gnome-shell"
      become: yes
      apt:
        package: chrome-gnome-shell
      when: not is_wsl

    - name: "[Non-WSL] Install numix Gnome theme"
      become: yes
      apt:
        package: numix-gtk-theme
      when: not is_wsl

    - name: "[Non-WSL] Add paper Gnome icon theme APT package source"
      become: yes
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/ppa_snwh_ppa_{{ distribution_release_snwh }}.asc] http://ppa.launchpad.net/snwh/ppa/ubuntu {{ distribution_release_snwh }} main
        filename: ppa_snwh_ppa_{{ distribution_release_snwh }}
        update_cache: no
      register: apt_repository
      when: not is_wsl

    - name: "[Non-WSL] Update APT package list"
      become: yes
      apt:
        update_cache: yes
      when: not is_wsl and apt_repository.changed
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: "[Non-WSL] Install paper Gnome icon theme"
      become: yes
      apt:
        package: "{{ item }}"
      loop:
        - paper-icon-theme
      when: not is_wsl

    - name: "[Ubuntu 18.04] Install PIP 2"
      become: yes
      apt:
        package: python-pip
      when: is_ubuntu_bionic

    - name: "[Non-WSL] Install PIP 3"
      become: yes
      apt:
        package: python3-pip
      when: not is_wsl

    - name: "[Non-WSL] Install psutil Python package"
      become: yes
      pip:
        name: psutil
      when: not is_wsl
